
user  nginx;
worker_processes  auto;

error_log  /var/log/nginx/error.log notice;
pid        /var/run/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  65;

    #gzip  on;

    # include /etc/nginx/conf.d/*.conf;

    # handle the port 80 if expose in production
    server {
        listen 80;
        listen [::]:80;
        server_name insert_here;

        return 301 https://$host$request_uri;  
    }

    server {
		listen 8443 ssl;
		listen [::]:8443 ssl;
        # FF HTTP/3
        http2 on;
        server_name insert_here;
        ssl_certificate /etc/nginx/ssl/transcendence/transcendence.crt;
		ssl_certificate_key /etc/nginx/ssl/transcendence/transcendence.key;
		ssl_protocols TLSv1.3;
        ssl_ciphers HIGH:!aNULL:!MD5;

        # ssl_trusted_certificate /etc/nginx/ssl/transcendance.crt;  # Optional but recommended
        # ssl_dhparam /etc/nginx/ssl/dhparam.pem;  # Optional, if you have DH params for additional security
        # ssl_ciphers 'TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384';
        # ssl_prefer_server_ciphers on;

        # root /usr/share/nginx/html;
        # index index.html;

        # if ($host ~* "localhost") {
        #     return 403;
        # }

        # React for dev
        location / {
            proxy_pass http://frontend:5173;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            #for ws
            proxy_set_header Upgrade $http_upgrade;  # Added to handle WebSocket upgrades at root path
            proxy_set_header Connection "upgrade";  # Added to handle WebSocket connections
            proxy_cache_bypass $http_upgrade;  # Added to prevent caching for WebSocket connections
        }

        # for socket dev to remove
        location /ws {
            proxy_pass http://frontend:5173;  # Ensure this points to the correct WebSocket server
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            #for ws
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
        }
        location /ws/ {
            proxy_pass http://frontend:5173;  # Ensure this points to the correct WebSocket server
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            #for ws
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
        }

        # Redirect /api to /api/
        # location = /api {
        #     return 301 /api/;  # Permanently redirect to /api/
        # }

		location /api/ {
			proxy_pass http://backend:8000;
			proxy_http_version 1.1;
			proxy_set_header Host $host;
			proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_set_header X-Forwarded-Proto $scheme;
		}

        location /api/ws/ {
            proxy_pass http://backend:8000;  # Ensure this points to the correct WebSocket server
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            #for ws
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
        }

        location /media/ {
			alias /var/www/media/;
		}

        # Optional: add security headers for better protection
        # add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
        # add_header X-Content-Type-Options "nosniff" always;
        # add_header X-Frame-Options "DENY" always;
        # add_header X-XSS-Protection "1; mode=block" always;
        # add_header Referrer-Policy "no-referrer" always;
        # add_header Content-Security-Policy "default-src 'self';" always;
	}
}
